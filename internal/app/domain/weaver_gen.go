// Code generated by "weaver generate". DO NOT EDIT.
//go:build !ignoreWeaverGen

package domain

import (
	"fmt"
	"github.com/ServiceWeaver/weaver"
	"github.com/ServiceWeaver/weaver/runtime/codegen"
)

// weaver.InstanceOf checks.

// weaver.Router checks.

// Local stub implementations.

// Client stub implementations.

// Note that "weaver generate" will always generate the error message below.
// Everything is okay. The error message is only relevant if you see it when
// you run "go build" or "go run".
var _ codegen.LatestVersion = codegen.Version[[0][20]struct{}](`

ERROR: You generated this file with 'weaver generate' v0.21.2 (codegen
version v0.20.0). The generated code is incompatible with the version of the
github.com/ServiceWeaver/weaver module that you're using. The weaver module
version can be found in your go.mod file or by running the following command.

    go list -m github.com/ServiceWeaver/weaver

We recommend updating the weaver module and the 'weaver generate' command by
running the following.

    go get github.com/ServiceWeaver/weaver@latest
    go install github.com/ServiceWeaver/weaver/cmd/weaver@latest

Then, re-run 'weaver generate' and re-build your code. If the problem persists,
please file an issue at https://github.com/ServiceWeaver/weaver/issues.

`)

// Server stub implementations.

// Reflect stub implementations.

// AutoMarshal implementations.

var _ codegen.AutoMarshal = (*AccountIn)(nil)

type __is_AccountIn[T ~struct {
	weaver.AutoMarshal
	DocumentNumber string "json:\"document_number\""
}] struct{}

var _ __is_AccountIn[AccountIn]

func (x *AccountIn) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("AccountIn.WeaverMarshal: nil receiver"))
	}
	enc.String(x.DocumentNumber)
}

func (x *AccountIn) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("AccountIn.WeaverUnmarshal: nil receiver"))
	}
	x.DocumentNumber = dec.String()
}

var _ codegen.AutoMarshal = (*AccountOut)(nil)

type __is_AccountOut[T ~struct {
	weaver.AutoMarshal
	ID             string "json:\"id\""
	DocumentNumber string "json:\"document_number\""
	CreatedAt      int64  "json:\"created_at\""
	DeletedAt      int64  "json:\"deleted_at\""
}] struct{}

var _ __is_AccountOut[AccountOut]

func (x *AccountOut) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("AccountOut.WeaverMarshal: nil receiver"))
	}
	enc.String(x.ID)
	enc.String(x.DocumentNumber)
	enc.Int64(x.CreatedAt)
	enc.Int64(x.DeletedAt)
}

func (x *AccountOut) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("AccountOut.WeaverUnmarshal: nil receiver"))
	}
	x.ID = dec.String()
	x.DocumentNumber = dec.String()
	x.CreatedAt = dec.Int64()
	x.DeletedAt = dec.Int64()
}

var _ codegen.AutoMarshal = (*Operation)(nil)

type __is_Operation[T ~struct {
	weaver.AutoMarshal
	ID          string "json:\"id,omitempty\""
	Description string "json:\"description,omitempty\""
	IsActive    bool   "json:\"is_active,omitempty\""
}] struct{}

var _ __is_Operation[Operation]

func (x *Operation) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Operation.WeaverMarshal: nil receiver"))
	}
	enc.String(x.ID)
	enc.String(x.Description)
	enc.Bool(x.IsActive)
}

func (x *Operation) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Operation.WeaverUnmarshal: nil receiver"))
	}
	x.ID = dec.String()
	x.Description = dec.String()
	x.IsActive = dec.Bool()
}

var _ codegen.AutoMarshal = (*TransactionIn)(nil)

type __is_TransactionIn[T ~struct {
	weaver.AutoMarshal
	AccountID       string  "json:\"account_id,omitempty\""
	OperationTypeID string  "json:\"operation_type_id,omitempty\""
	Amout           float64 "json:\"amout,omitempty\""
}] struct{}

var _ __is_TransactionIn[TransactionIn]

func (x *TransactionIn) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("TransactionIn.WeaverMarshal: nil receiver"))
	}
	enc.String(x.AccountID)
	enc.String(x.OperationTypeID)
	enc.Float64(x.Amout)
}

func (x *TransactionIn) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("TransactionIn.WeaverUnmarshal: nil receiver"))
	}
	x.AccountID = dec.String()
	x.OperationTypeID = dec.String()
	x.Amout = dec.Float64()
}

var _ codegen.AutoMarshal = (*TransactionOut)(nil)

type __is_TransactionOut[T ~struct {
	weaver.AutoMarshal
	ID              string  "json:\"id,omitempty\""
	AccountID       string  "json:\"account_id,omitempty\""
	OperationTypeID string  "json:\"operation_type_id,omitempty\""
	Amout           float64 "json:\"amout,omitempty\""
	EventDate       int64   "json:\"event_date,omitempty\""
}] struct{}

var _ __is_TransactionOut[TransactionOut]

func (x *TransactionOut) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("TransactionOut.WeaverMarshal: nil receiver"))
	}
	enc.String(x.ID)
	enc.String(x.AccountID)
	enc.String(x.OperationTypeID)
	enc.Float64(x.Amout)
	enc.Int64(x.EventDate)
}

func (x *TransactionOut) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("TransactionOut.WeaverUnmarshal: nil receiver"))
	}
	x.ID = dec.String()
	x.AccountID = dec.String()
	x.OperationTypeID = dec.String()
	x.Amout = dec.Float64()
	x.EventDate = dec.Int64()
}
